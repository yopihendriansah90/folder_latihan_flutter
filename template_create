#!/bin/bash

# --- Konfigurasi ---
# Tentukan lokasi folder template Flutter-mu.
# Pastikan jalur ini benar dan folder template sudah ada.
TEMPLATE_DIR="/home/yopi/development/flutterproject/templateandroid"

# Tentukan awalan (prefix) untuk nama paket baru (misalnya, com.example. atau com.yourcompany.).
# Skrip akan menambahkan nama proyek baru setelah awalan ini.
# Contoh: Jika NEW_PACKAGE_PREFIX="com.mycompany." dan nama proyek "my_app",
# maka nama paket akan menjadi "com.mycompany.my_app".
NEW_PACKAGE_PREFIX="com.example." # Kamu bisa mengubah ini sesuai kebutuhanmu

# --- Validasi Input ---
# Memastikan pengguna memberikan nama proyek baru.
if [ -z "$1" ]; then
  echo "Penggunaan: template_create <nama_proyek>"
  echo "Contoh: template_create my_new_app"
  exit 1
fi

NEW_PROJECT_NAME="$1" # Nama proyek baru dari argumen
# Mengubah nama proyek menjadi format yang aman untuk nama paket (misalnya, mengganti hyphen dengan underscore)
NEW_PACKAGE_SUFFIX=$(echo "$NEW_PROJECT_NAME" | tr '-' '_')
NEW_PACKAGE_NAME="${NEW_PACKAGE_PREFIX}${NEW_PACKAGE_SUFFIX}" # Nama paket baru

# Mendapatkan nama proyek lama dari nama folder template.
OLD_PROJECT_NAME=$(basename "$TEMPLATE_DIR")

# Memastikan folder template ada.
if [ ! -d "$TEMPLATE_DIR" ]; then
  echo "Error: Folder template '$TEMPLATE_DIR' tidak ditemukan."
  exit 1
fi

# Memastikan folder proyek baru belum ada di direktori saat ini.
if [ -d "$NEW_PROJECT_NAME" ]; then
  echo "Error: Folder proyek '$NEW_PROJECT_NAME' sudah ada di direktori saat ini."
  exit 1
fi

# --- Proses Penyalinan ---
echo "Menyalin template dari '$TEMPLATE_DIR' ke '$NEW_PROJECT_NAME'..."
cp -r "$TEMPLATE_DIR" "$NEW_PROJECT_NAME"

# Masuk ke direktori proyek baru.
cd "$NEW_PROJECT_NAME" || { echo "Gagal masuk ke direktori '$NEW_PROJECT_NAME'."; exit 1; }

# --- Mendapatkan Nama Paket Lama ---
# Mencoba mendapatkan nama paket lama dari build.gradle.kts (lebih modern).
OLD_PACKAGE_NAME=$(grep -oP 'namespace = "\K[^"]+' android/app/build.gradle.kts | head -n 1)

# Jika tidak ditemukan dari namespace, coba dari applicationId.
if [ -z "$OLD_PACKAGE_NAME" ]; then
  OLD_PACKAGE_NAME=$(grep -oP 'applicationId = "\K[^"]+' android/app/build.gradle.kts | head -n 1)
fi

# Jika masih tidak ditemukan, gunakan nama paket default yang umum.
if [ -z "$OLD_PACKAGE_NAME" ]; then
  echo "Peringatan: Tidak dapat menentukan nama paket lama dari build.gradle.kts. Menggunakan 'com.example.templateandroid' sebagai fallback."
  OLD_PACKAGE_NAME="com.example.templateandroid" # Fallback umum
fi

echo "--- Detail Proyek ---"
echo "Nama Proyek Lama: $OLD_PROJECT_NAME"
echo "Nama Paket Lama: $OLD_PACKAGE_NAME"
echo "Nama Proyek Baru: $NEW_PROJECT_NAME"
echo "Nama Paket Baru: $NEW_PACKAGE_NAME"
echo "--------------------"

# --- Pembaruan File Konfigurasi ---

echo "Memperbarui pubspec.yaml..."
# Mengganti nama proyek di pubspec.yaml
sed -i "s/^name: $OLD_PROJECT_NAME$/name: $NEW_PROJECT_NAME/" pubspec.yaml

echo "Memperbarui file Android..."
# Mengganti nama paket di AndroidManifest.xml
sed -i "s/package=\"$OLD_PACKAGE_NAME\"/package=\"$NEW_PACKAGE_NAME\"/" android/app/src/main/AndroidManifest.xml
# Mengganti namespace dan applicationId di build.gradle.kts
sed -i "s/namespace = \"$OLD_PACKAGE_NAME\"/namespace = \"$NEW_PACKAGE_NAME\"/" android/app/build.gradle.kts
sed -i "s/applicationId = \"$OLD_PACKAGE_NAME\"/applicationId = \"$NEW_PACKAGE_NAME\"/" android/app/build.gradle.kts

echo "Memperbarui file iOS (usaha terbaik)..."
# Mengganti PRODUCT_BUNDLE_IDENTIFIER di project.pbxproj (mungkin perlu verifikasi manual)
sed -i "s/PRODUCT_BUNDLE_IDENTIFIER = $OLD_PACKAGE_NAME;/PRODUCT_BUNDLE_IDENTIFIER = $NEW_PACKAGE_NAME;/" ios/Runner.xcodeproj/project.pbxproj

echo "Memperbarui import di file Dart..."
# Mengganti nama proyek dalam import package:
find lib -type f -name "*.dart" -exec sed -i "s/package:$OLD_PROJECT_NAME/package:$NEW_PROJECT_NAME/g" {} +
# Mengganti nama paket eksplisit di file Dart (jika ada)
find lib -type f -name "*.dart" -exec sed -i "s/$OLD_PACKAGE_NAME/$NEW_PACKAGE_NAME/g" {} +

# --- Mengganti Nama Direktori Paket Android ---
echo "Mengganti nama direktori paket Android..."
OLD_PACKAGE_PATH=$(echo "$OLD_PACKAGE_NAME" | tr '.' '/') # Mengubah "com.example.old" menjadi "com/example/old"
NEW_PACKAGE_PATH=$(echo "$NEW_PACKAGE_NAME" | tr '.' '/') # Mengubah "com.example.new" menjadi "com/example/new"

ANDROID_MAIN_DIR="android/app/src/main"
KOTLIN_DIR="$ANDROID_MAIN_DIR/kotlin"
JAVA_DIR="$ANDROID_MAIN_DIR/java"

# Prioritaskan Kotlin, lalu Java
if [ -d "$KOTLIN_DIR" ]; then
  OLD_FULL_PATH="$KOTLIN_DIR/$OLD_PACKAGE_PATH"
  NEW_FULL_PATH="$KOTLIN_DIR/$NEW_PACKAGE_PATH"
  if [ -d "$OLD_FULL_PATH" ]; then
    mkdir -p "$(dirname "$NEW_FULL_PATH")" # Pastikan direktori induk baru ada
    mv "$OLD_FULL_PATH" "$NEW_FULL_PATH"
    echo "Direktori paket Kotlin berhasil diganti nama: $OLD_FULL_PATH -> $NEW_FULL_PATH"
  else
    echo "Peringatan: Direktori paket Kotlin lama '$OLD_FULL_PATH' tidak ditemukan."
  fi
elif [ -d "$JAVA_DIR" ]; then
  OLD_FULL_PATH="$JAVA_DIR/$OLD_PACKAGE_PATH"
  NEW_FULL_PATH="$JAVA_DIR/$NEW_PACKAGE_PATH"
  if [ -d "$OLD_FULL_PATH" ]; then
    mkdir -p "$(dirname "$NEW_FULL_PATH")" # Pastikan direktori induk baru ada
    mv "$OLD_FULL_PATH" "$NEW_FULL_PATH"
    echo "Direktori paket Java berhasil diganti nama: $OLD_FULL_PATH -> $NEW_FULL_PATH"
  else
    echo "Peringatan: Direktori paket Java lama '$OLD_FULL_PATH' tidak ditemukan."
  fi
else
  echo "Peringatan: Tidak dapat menemukan direktori sumber Kotlin atau Java untuk mengganti nama jalur paket."
fi

# --- Pembersihan dan Instalasi Dependensi ---
echo "Menjalankan 'flutter clean' dan 'flutter pub get'..."
flutter clean
flutter pub get

echo "Proyek '$NEW_PROJECT_NAME' berhasil dibuat dari template!"
echo "---------------------------------------------------------"
echo "Catatan Penting:"
echo "1. Untuk iOS, periksa kembali 'Bundle Identifier' di Xcode jika diperlukan, karena penggantian otomatis mungkin tidak sempurna."
echo "2. Pastikan versi NDK di template-mu sudah diperbarui seperti saran sebelumnya."
echo "3. Kamu mungkin perlu menjalankan 'flutter doctor' untuk memastikan semua pengaturan sudah benar."
echo "---------------------------------------------------------"
